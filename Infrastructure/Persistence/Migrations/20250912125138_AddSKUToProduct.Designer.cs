// <auto-generated />
using System;
using Dapper_StoredProcedures.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dapper_StoredProcedures.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250912125138_AddSKUToProduct")]
    partial class AddSKUToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie@example.com",
                            Name = "Charlie"
                        },
                        new
                        {
                            Id = 4,
                            Email = "david@example.com",
                            Name = "David"
                        },
                        new
                        {
                            Id = 5,
                            Email = "eva@example.com",
                            Name = "Eva"
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2025, 9, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 1500m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2025, 9, 13, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 520m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            OrderDate = new DateTime(2025, 9, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 35m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            OrderDate = new DateTime(2025, 9, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 45m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            OrderDate = new DateTime(2025, 9, 16, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 100m
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 5,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Method = "CreditCard",
                            PaymentDate = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            OrderId = 2,
                            Method = "PayPal",
                            PaymentDate = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            OrderId = 3,
                            Method = "Cash",
                            PaymentDate = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        },
                        new
                        {
                            OrderId = 4,
                            Method = "CreditCard",
                            PaymentDate = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        },
                        new
                        {
                            OrderId = 5,
                            Method = "BankTransfer",
                            PaymentDate = new DateTime(2025, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId", "Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 1000m,
                            Quantity = 10,
                            SKU = "LAP-001"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Smartphone",
                            Price = 500m,
                            Quantity = 20,
                            SKU = "SMP-001"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Novel",
                            Price = 20m,
                            Quantity = 50,
                            SKU = "BOK-001"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Name = "T-Shirt",
                            Price = 15m,
                            Quantity = 100,
                            SKU = "CLT-001"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Name = "Basketball",
                            Price = 30m,
                            Quantity = 25,
                            SKU = "SPT-001"
                        });
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Order", b =>
                {
                    b.HasOne("Dapper_StoredProcedures.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Dapper_StoredProcedures.Domain.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_StoredProcedures.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Payment", b =>
                {
                    b.HasOne("Dapper_StoredProcedures.Domain.Entities.Order", null)
                        .WithOne()
                        .HasForeignKey("Dapper_StoredProcedures.Domain.Entities.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dapper_StoredProcedures.Domain.Entities.Product", b =>
                {
                    b.HasOne("Dapper_StoredProcedures.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
